// Generated by view binder compiler. Do not edit!
package com.example.bmicalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bmicalculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBmiBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText heightInput;

  @NonNull
  public final TextView heightLabel;

  @NonNull
  public final TextView resultNumber;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText weightInput;

  @NonNull
  public final TextView weightLabel;

  private FragmentBmiBinding(@NonNull FrameLayout rootView, @NonNull Button button,
      @NonNull EditText heightInput, @NonNull TextView heightLabel, @NonNull TextView resultNumber,
      @NonNull TextView resultText, @NonNull TextView textView, @NonNull EditText weightInput,
      @NonNull TextView weightLabel) {
    this.rootView = rootView;
    this.button = button;
    this.heightInput = heightInput;
    this.heightLabel = heightLabel;
    this.resultNumber = resultNumber;
    this.resultText = resultText;
    this.textView = textView;
    this.weightInput = weightInput;
    this.weightLabel = weightLabel;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBmiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBmiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_bmi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBmiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.heightInput;
      EditText heightInput = ViewBindings.findChildViewById(rootView, id);
      if (heightInput == null) {
        break missingId;
      }

      id = R.id.heightLabel;
      TextView heightLabel = ViewBindings.findChildViewById(rootView, id);
      if (heightLabel == null) {
        break missingId;
      }

      id = R.id.resultNumber;
      TextView resultNumber = ViewBindings.findChildViewById(rootView, id);
      if (resultNumber == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.weightInput;
      EditText weightInput = ViewBindings.findChildViewById(rootView, id);
      if (weightInput == null) {
        break missingId;
      }

      id = R.id.weightLabel;
      TextView weightLabel = ViewBindings.findChildViewById(rootView, id);
      if (weightLabel == null) {
        break missingId;
      }

      return new FragmentBmiBinding((FrameLayout) rootView, button, heightInput, heightLabel,
          resultNumber, resultText, textView, weightInput, weightLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
