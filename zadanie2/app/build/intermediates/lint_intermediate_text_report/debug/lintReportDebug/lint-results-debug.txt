C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\java\com\example\bmicalculator\BmiFragment.java:56: Warning: Implicitly using the default locale is a common source of bugs: Use String.format(Locale, ...) instead [DefaultLocale]
        String formattedBmi = String.format("%.2f", bmi);
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\java\com\example\bmicalculator\KcalCalculatorFragment.java:66: Warning: Implicitly using the default locale is a common source of bugs: Use String.format(Locale, ...) instead [DefaultLocale]
            resultText.setText(String.format("Daily Caloric Needs: %.2f kcal", dailyCalories));
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "DefaultLocale":
   Calling String#toLowerCase() or #toUpperCase() without specifying an
   explicit locale is a common source of bugs. The reason for that is that
   those methods will use the current locale on the user's device, and even
   though the code appears to work correctly when you are developing the app,
   it will fail in some locales. For example, in the Turkish locale, the
   uppercase replacement for i is not I.

   If you want the methods to just perform ASCII replacement, for example to
   convert an enum name, call String#toUpperCase(Locale.ROOT) instead. If you
   really want to use the current locale, call
   String#toUpperCase(Locale.getDefault()) instead.

   https://developer.android.com/reference/java/util/Locale.html#default_locale

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\AndroidManifest.xml:16: Error: KcalCalculatorFragment must extend android.app.Activity [Instantiatable]
            android:name=".KcalCalculatorFragment"
                          ~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Instantiatable":
   Activities, services, broadcast receivers etc. registered in the manifest
   file (or for custom views, in a layout file) must be "instantiatable" by
   the system, which means that the class must be public, it must have an
   empty public constructor, and if it's an inner class, it must be a static
   inner class.

   If you use a custom AppComponentFactory to instantiate app components
   yourself, consider disabling this Lint issue in order to avoid false
   positives.

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.1 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.1 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.1 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.12.0 is available: 1.15.0 [GradleDependency]
core = "1.12.0"
       ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.12.0 is available: 1.15.0 [GradleDependency]
core = "1.12.0"
       ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:3: Warning: A newer version of androidx.core:core than 1.12.0 is available: 1.15.0 [GradleDependency]
core = "1.12.0"
       ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:5: Warning: A newer version of androidx.core:core-splashscreen than 1.0.0 is available: 1.0.1 [GradleDependency]
coreSplashscreenVersion = "1.0.0"
                          ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:5: Warning: A newer version of androidx.core:core-splashscreen than 1.0.0 is available: 1.0.1 [GradleDependency]
coreSplashscreenVersion = "1.0.0"
                          ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:5: Warning: A newer version of androidx.core:core-splashscreen than 1.0.0 is available: 1.0.1 [GradleDependency]
coreSplashscreenVersion = "1.0.0"
                          ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:9: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:9: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:9: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
appcompat = "1.6.1"
            ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:10: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0 [GradleDependency]
material = "1.10.0"
           ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:10: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0 [GradleDependency]
material = "1.10.0"
           ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:10: Warning: A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0 [GradleDependency]
material = "1.10.0"
           ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:12: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:12: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:12: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
constraintlayout = "2.1.4"
                   ~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:18: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.03.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:18: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.03.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:18: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.03.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:23: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:23: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:23: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:24: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen-v100 = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreenVersion" }
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:24: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen-v100 = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreenVersion" }
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\gradle\libs.versions.toml:24: Information: There are multiple dependencies androidx.core:core-splashscreen but with different version [SimilarGradleDependency]
core-splashscreen-v100 = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreenVersion" }
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SimilarGradleDependency":
   This detector looks for usages of libraries when name and group are the
   same but versions are different. Using multiple versions in big project is
   fine, and there are cases where you deliberately want to stick with such
   approach. However, you may simply not be aware that this situation happens,
   and that is what this lint check helps find.

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_bmi.xml:91: Warning: Should use "sp" instead of "dp" for text sizes [SpUsage]
            android:textSize="32dp"
            ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_bmi.xml:107: Warning: Should use "sp" instead of "dp" for text sizes [SpUsage]
            android:textSize="28dp" />
            ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_diet_recomendation.xml:29: Warning: Should use "sp" instead of "dp" for text sizes [SpUsage]
            android:textSize="48dp"
            ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_kcal_calculator.xml:19: Warning: Should use "sp" instead of "dp" for text sizes [SpUsage]
            android:textSize="34dp"
            ~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SpUsage":
   When setting text sizes, you should normally use sp, or "scale-independent
   pixels". This is like the dp unit, but it is also scaled by the user's font
   size preference. It is recommend you use this unit when specifying font
   sizes, so they will be adjusted for both the screen density and the user's
   preference.

   There are cases where you might need to use dp; typically this happens when
   the text is in a container with a specific dp-size. This will prevent the
   text from spilling outside the container. Note however that this means that
   the user's font size settings are not respected, so consider adjusting the
   layout itself to be more flexible.

   https://developer.android.com/training/multiscreen/screendensities.html

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\build.gradle:33: Warning: If you plan to use data binding in a Kotlin project, you should apply the kotlin-kapt plugin. [DataBindingWithoutKapt]
        dataBinding = true
        ~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "DataBindingWithoutKapt":
   Apps that use Kotlin and data binding should also apply the kotlin-kapt
   plugin.

   https://kotlinlang.org/docs/reference/kapt.html

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\mipmap-anydpi-v26: Warning: This folder configuration (v26) is unnecessary; minSdkVersion is 26. Merge all the resources in this folder into mipmap-anydpi. [ObsoleteSdkInt]

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\values\colors.xml:3: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\drawable\run_logo_50dp.xml:1: Warning: The resource R.drawable.run_logo_50dp appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="50dp" android:viewportHeight="511.99" android:viewportWidth="511.99" android:width="50dp">
^
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\values\themes.xml:8: Warning: The resource R.style.Theme_BMICalculator appears to be unused [UnusedResources]
    <style name="Theme.BMICalculator" parent="Base.Theme.BMICalculator" />
           ~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\values\spinnerValues.xml:5: Warning: Replace "-" with an "en dash" character (–, &#8211;) ? [TypographyDashes]
        <item>Light (1-3 days/week)</item>
              ~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\values\spinnerValues.xml:6: Warning: Replace "-" with an "en dash" character (–, &#8211;) ? [TypographyDashes]
        <item>Moderate (3-5 days/week)</item>
              ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\values\spinnerValues.xml:7: Warning: Replace "-" with an "en dash" character (–, &#8211;) ? [TypographyDashes]
        <item>Active (6-7 days/week)</item>
              ~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "TypographyDashes":
   The "n dash" (u2013, &#8211;) and the "m dash" (u2014, &#8212;) characters
   are used for ranges (n dash) and breaks (m dash). Using these instead of
   plain hyphens can make text easier to read and your application will look
   more polished.

   https://en.wikipedia.org/wiki/Dash

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_bmi.xml:26: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_bmi.xml:38: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_kcal_calculator.xml:24: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_kcal_calculator.xml:36: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~
C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\res\layout\fragment_kcal_calculator.xml:48: Warning: Missing autofillHints attribute [Autofill]
        <EditText
         ~~~~~~~~

   Explanation for issues of type "Autofill":
   Specify an autofillHints attribute when targeting SDK version 26 or higher
   or explicitly specify that the view is not important for autofill. Your app
   can help an autofill service classify the data correctly by providing the
   meaning of each view that could be autofillable, such as views representing
   usernames, passwords, credit card fields, email addresses, etc.

   The hints can have any value, but it is recommended to use predefined
   values like 'username' for a username or 'creditCardNumber' for a credit
   card number. For a list of all predefined autofill hint constants, see the
   AUTOFILL_HINT_ constants in the View reference at
   https://developer.android.com/reference/android/view/View.html.

   You can mark a view unimportant for autofill by specifying an
   importantForAutofill attribute on that view or a parent view. See
   https://developer.android.com/reference/android/view/View.html#setImportant
   ForAutofill(int).

   https://developer.android.com/guide/topics/text/autofill.html

C:\Users\dagma\AndroidStudioProjects\PAMO-UNI\BMICalculator\app\src\main\java\com\example\bmicalculator\BmiFragment.java:58: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        resultNumber.setText(getString(R.string.bmi) + ": " + formattedBmi);
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

1 errors, 41 warnings
